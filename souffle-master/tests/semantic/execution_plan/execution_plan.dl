.type S <: symbol


.decl r1(x:S,y:S)
.decl r2(x:S,y:S)
.decl r3(x:S,y:S)
.decl r4(x:S,y:S)
.output r1
.output r2
.output r3
.output r4

r1(a,d) :- r1(a,b),r1(b,c),r1(c,d).

// this one is ok
r2(a,d) :- r2(a,b),r2(b,c),r2(c,d).
        .plan 0: (1,2,3), 1: (3,2,1), 2: (2,3,1)

// this one is not
r3(a,d) :- r3(a,b),r3(b,c),r3(c,d).
        .plan 1: (1,2,3), 2: (3,2,1), 3: (2,3,1)

// this one is not
r4(a,d) :- r4(a,b),r4(b,c),r4(c,d).
        .plan 0: (1,2,2), 1: (3,2), 2: (2,3,1,3)

.decl y(a:S)
.output y

y(a) :- r1(a,_), r2(a,_), r3(a,_).
        .plan 0:(1,2,3)

.decl x1(a:number)
.decl x2(a:number)
.decl x3(a:number)
.output x1
.output x2
.output x3

// ok
x1(a) <= x1(b) :- a < b.
        .plan 0:(1,2)

// Invalid plan: order is only 2.
x2(a) <= x2(b) :- a < b.
        .plan 0:(1,2,3)

// Invalid plan: incomplete
x3(a) <= x3(b) :- a < b.
        .plan 0:(1,3)
